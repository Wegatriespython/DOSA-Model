*** |  (C) 2006-2024 Potsdam Institute for Climate Impact Research (PIK)
*** |  authors, and contributors see CITATION.cff file. This file is part
*** |  of REMIND and licensed under AGPL-3.0-or-later. Under Section 7 of
*** |  AGPL-3.0, you are granted additional permissions described in the
*** |  REMIND License Exception, version 1.0 (see LICENSE file).
*** |  Contact: remind@pik-potsdam.de
*** SOF ./modules/01_macro/singleSectorGr/bounds.gms

*nb* lower bounds on CES values
vm_cons.lo(t,regi)     = 1e-3;
vm_cesIO.lo(t,regi,in)$( NOT in_industry_dyn37(in) ) 
  = max(1e-6, abs(pm_cesdata(t,regi,in,"offset_quantity")));

*** fix energy inputs to CES structure in t0 to the parameter values
vm_cesIO.fx(t0(tall),regi,in)$(   ppfEn(in) 
                               OR industry_ue_calibration_target_dyn37(in) )
  = pm_cesdata(tall,regi,in,"quantity");

*** set macro investments to bound in 2005
vm_invMacro.fx("2005",regi,"kap") = p01_boundInvMacro(regi);
*cb 2012-05-23 lower bound for capital investment to avoid "zero investment" problem for the conopt solver
vm_invMacro.lo(t,regi,"kap")$(t.val gt 2005) = 0.01 * vm_invMacro.lo("2005",regi,"kap");

v01_invMacroAdj.fx("2005",regi,ppfKap(in)) = 0;
*** EOF ./modules/01_macro/singleSectorGr/bounds.gms

*** |  (C) 2006-2024 Potsdam Institute for Climate Impact Research (PIK)
*** |  authors, and contributors see CITATION.cff file. This file is part
*** |  of REMIND and licensed under AGPL-3.0-or-later. Under Section 7 of
*** |  AGPL-3.0, you are granted additional permissions described in the
*** |  REMIND License Exception, version 1.0 (see LICENSE file).
*** |  Contact: remind@pik-potsdam.de
*** SOF ./modules/01_macro/singleSectorGr/datainput.gms

*** depreciation rate of capital
pm_delta_kap(regi,"kap") = 0.05;

*AL* initialize parameter (avoid compilation errors)
p01_ppfen_ratios(t,regi,in,in2) = 0; 
pm_ppfen_shares(t,regi,in,in2) = 0; 
*** load data for macro investments in 2005, used as bound
parameter p01_boundInvMacro(all_regi)        "macro investments in 2005" 
/
$ondelim
$include "./modules/01_macro/singleSectorGr/input/p01_boundInvMacro.cs4r"
$offdelim
/
;
p01_boundInvMacro(all_regi) = p01_boundInvMacro(all_regi) * pm_shPPPMER(all_regi);
*** EOF ./modules/01_macro/singleSectorGr/datainput.gms

*** |  (C) 2006-2024 Potsdam Institute for Climate Impact Research (PIK)
*** |  authors, and contributors see CITATION.cff file. This file is part
*** |  of REMIND and licensed under AGPL-3.0-or-later. Under Section 7 of
*** |  AGPL-3.0, you are granted additional permissions described in the
*** |  REMIND License Exception, version 1.0 (see LICENSE file).
*** |  Contact: remind@pik-potsdam.de
*** SOF ./modules/01_macro/singleSectorGr/declarations.gms
***-------------------------------------------------------------------------------
***                                   PARAMETERS
***-------------------------------------------------------------------------------
parameters
pm_delta_kap(all_regi,all_in)                                   "Depreciation rate of capital."
p01_cumDeprecFactor_old(ttot,all_regi,all_in)                    "Investment depreciation within a period, applied to the investment of t -1."
p01_cumDeprecFactor_new(ttot,all_regi,all_in)                    "Investment depreciation within a period, applied to the investment of t."
p01_ppfen_ratios(ttot,all_regi,all_in,all_in)                   "Limit ratio of two primary production factors of energy (ppfEn)."
pm_ppfen_shares(ttot,all_regi,all_in,all_in)                    "Limit the share of one ppfEn in total CES nest inputs."
pm_consPC(tall,all_regi)                                        "Consumption per capita"
;   

*** output parameters
parameters
o01_CESderivatives(ttot,all_regi,all_in,all_in)        "derivatives of production CES function"
o01_totalCESEff(ttot,all_regi,all_in)                  "total CES efficiency" 
o01_CESmrs(ttot,all_regi,all_in,all_in)                "marginal rate of subsitution of CES production factors"
;

***------------------------------------------------------------ -------------------
***                                   VARIABLES 
***------------------------------------------------------------ -------------------
positive variables  
vm_cons(ttot,all_regi)                                          "Consumption"  
vm_cesIO(tall,all_regi,all_in)                                  "Production factor" 
vm_invMacro(ttot,all_regi,all_in)                               "Investment for capital for ttot"
v01_invMacroAdj(ttot,all_regi,all_in)                           "Adjustment costs of macro economic investments"
vm_invInno(ttot,all_regi,all_in)                                "Investment into innovation"
vm_invImi(ttot, all_regi,all_in)                                "Investment into imitation" 
v01_enerSerAdj(tall,all_regi,all_in)                             "adjustment costs for energy service transformations"
;
***------------------------------------------------------------ -------------------
***                                   EQUATIONS 
***------------------------------------------------------------ -------------------
equations   
qm_budget(ttot,all_regi)                                        "Budget balance"
q01_balLab(ttot,all_regi)                                       "Labour balance"
q01_cesIO(ttot,all_regi,all_in)                                 "Production function"
q01_kapMo(ttot,all_regi,all_in)                                 "Capital motion equation"
q01_kapMo0(t0,all_regi,all_in)                                  "Initial condition for capital"
q01_invMacroAdj(ttot,all_regi,all_in)                           "Adjustment costs for macro economic investments"
q01_limitShPpfen(ttot,all_regi,all_in,all_in)                   "Limit the share of one ppfEn in total CES nest inputs"
q01_limtRatioPpfen(ttot,all_regi,all_in,all_in)                 "Limit the ratio of two ppfEn"

;
*** EOF ./modules/01_macro/singleSectorGr/declarations.gms

*** |  (C) 2006-2024 Potsdam Institute for Climate Impact Research (PIK)
*** |  authors, and contributors see CITATION.cff file. This file is part
*** |  of REMIND and licensed under AGPL-3.0-or-later. Under Section 7 of
*** |  AGPL-3.0, you are granted additional permissions described in the
*** |  REMIND License Exception, version 1.0 (see LICENSE file).
*** |  Contact: remind@pik-potsdam.de
*** SOF ./modules/01_macro/singleSectorGr/equations.gms

*' @equations
***---------------------------------------------------------------------------
*' Usable macroeconomic output - net of climate change damages - is calculated from the macroeconomic output,
*' taking into account export and import of the final good, taking specific trade costs into account,
*' which are assigned to the importer. The resulting output is used for consumption,
*' for investments into the capital stock, and for the energy system cost components investments,
*' fuel costs and operation & maintenance.
*' Other additional costs like non-energy related greenhouse gas abatement costs and
*' agricultural costs, which are delivered by the land use model MAgPIE, are deduced from disposable output.
*' Net tax revenues and adjustment costs converge to zero in the optimal solution (equilibrium point).
***---------------------------------------------------------------------------
qm_budget(ttot,regi)$( ttot.val ge cm_startyear ) ..
    vm_cesIO(ttot,regi,"inco") * vm_damageFactor(ttot,regi)
  - vm_Xport(ttot,regi,"good")
  + vm_Mport(ttot,regi,"good") * (1 - pm_tradecostgood(regi) - pm_risk_premium(regi))
  =g=
    vm_cons(ttot,regi)
  + sum(ppfKap(in), vm_invMacro(ttot,regi,in))
  + sum(ppfKap(in), v01_invMacroAdj(ttot,regi,in))
  + sum(in, vm_invInno(ttot,regi,in))
  + sum(in, vm_invImi(ttot,regi,in))
  + sum(tradePe(enty)$(NOT tradeCap(enty)), pm_costsTradePeFinancial(regi,"Mport",enty) * vm_Mport(ttot,regi,enty))
  + sum(tradePe(enty)$(NOT tradeCap(enty)),
      (pm_costsTradePeFinancial(regi,"Xport",enty) * vm_Xport(ttot,regi,enty))
    * ( 1
      + ( pm_costsTradePeFinancial(regi,"XportElasticity",enty)
        / sqr(pm_ttot_val(ttot)-pm_ttot_val(ttot-1))
        * ( vm_Xport(ttot,regi,enty)
          / ( vm_Xport(ttot-1,regi,enty) + pm_costsTradePeFinancial(regi, "tradeFloor",enty) )
          - 1
          )
        )$( ttot.val ge max(2010, cm_startyear) )
      )
    )
  + sum(tradeSe, pm_MPortsPrice(ttot,regi,tradeSe) * vm_Mport(ttot,regi,tradeSe))
  - sum(tradeSe, pm_XPortsPrice(ttot,regi,tradeSe) * vm_Xport(ttot,regi,tradeSe))
  + sum(tradeCap, vm_costTradeCap(ttot,regi,tradeCap))
  + vm_taxrev(ttot,regi)$(ttot.val ge 2010)
  + vm_costAdjNash(ttot,regi)
  + sum(in_enerSerAdj(in), v01_enerSerAdj(ttot,regi,in))
  + sum(teEs, vm_esCapInv(ttot,regi,teEs))
  + vm_costpollution(ttot,regi)
  + pm_totLUcosts(ttot,regi)
*** agricultural MACs are part of pm_totLUcosts (see module 26_agCosts)
  + sum(enty$(emiMacSector(enty) AND (NOT emiMacMagpie(enty))), pm_macCost(ttot,regi,enty))
  + vm_costMatPrc(ttot,regi)
  + vm_costEnergySys(ttot,regi)
;

***---------------------------------------------------------------------------
*' The labor available in every time step and every region comes from exogenous data.
*' It is the population corrected by the population age structure,
*' which results in the labour force of people agged 15 to 65.
*' The labor participation rate is not factored into the labour supply (as it would only imply a
*' rescaling of parameters without consequences for the model's dynamic).
*' The labour market balance equation reads as follows:
***---------------------------------------------------------------------------
q01_balLab(t,regi)..
    vm_cesIO(t,regi,"lab")
  =e=
    pm_lab(t,regi)
;

***---------------------------------------------------------------------------
*' The production function is a nested CES (constant elasticity of substitution) production function.
*' The macroeconomic output is generated by the inputs capital, labor, and total final energy (as a macro-ecoomic
*' aggregate in $US units). The generation of total final energy is described
*' by a CES production function as well, whose input factors are CES function outputs again.
*' Hence, the outputs of CES nests are intermediates measured in $US units.
*' According to the Euler-equation the value of the intermediate equals the sum of expenditures for the inputs.
*' Sector-specific final energy types represent the bottom end of the `CES-tree'. These 'CES leaves' are
*' measured in physical units and have a price in $US per physical unit.
*' The top of the tree is the total economic output measured in $US.
*' The following equation is the generic form of the production function.
*' It treats the various CES nests separately and the nests are inter-connetected via mappings.
*' This equation calculates the amount of intermediate output in a time-step and region
*' from the associated factor input amounts according to:
*** Keep in mind to adjust the calculation of derivatives and shares
*** in ./core/reswrite.inc if you change the structure of this function.
***---------------------------------------------------------------------------
q01_cesIO(t,regi,ipf(out))..
  vm_cesIO(t,regi,out)
  =e=
  !! use exp(log(a) * b) = a ** b because the latter is not accurate in GAMS for
  !! very low values of a
  exp(
    log(
      sum(cesOut2cesIn(out,in),
        pm_cesdata(t,regi,in,"xi")
      * exp(
          log(
        pm_cesdata(t,regi,in,"eff")
      * vm_effGr(t,regi,in)
      * vm_damageProdFactor(t,regi,in)
      * vm_cesIO(t,regi,in)
      )
    * pm_cesdata(t,regi,out,"rho")
    )
      )
    )
  * (1 / pm_cesdata(t,regi,out,"rho"))
  )
;

***---------------------------------------------------------------------------
*' The capital stock is calculated recursively. Its amount in the previous time
*' step is devaluated by an annual depreciation factor and enlarged by investments.
*' Both depreciation and investments are expressed as annual values,
*' so the time step length is taken into account.
***---------------------------------------------------------------------------
q01_kapMo(ttot,regi,ppfKap(in))$(ord(ttot) lt card(ttot)
                         AND pm_ttot_val(ttot+1) ge max(2010, cm_startyear)
                         AND pm_cesdata("2005",regi,in,"quantity") gt 0     ) ..
  vm_cesIO(ttot+1,regi,in)
  =e=
    vm_cesIO(ttot,regi,in)
  * (1 - pm_delta_kap(regi,in))
 ** (pm_ttot_val(ttot+1) - pm_ttot_val(ttot))
  + p01_cumDeprecFactor_old(ttot+1,regi,in) * vm_invMacro(ttot,regi,in)
  + p01_cumDeprecFactor_new(ttot+1,regi,in) * vm_invMacro(ttot+1,regi,in)
;

***---------------------------------------------------------------------------
*' Adjustment costs of macro economic investments:
***---------------------------------------------------------------------------
q01_invMacroAdj(ttot,regi,ppfKap(in))$( ttot.val ge max(2010, cm_startyear))..
    v01_invMacroAdj(ttot,regi,in)
  =e=
    sqr( (vm_invMacro(ttot,regi,in)-vm_invMacro(ttot-1,regi,in))
      / (pm_ttot_val(ttot)-pm_ttot_val(ttot-1))
      / (vm_invMacro(ttot,regi,in)+0.0001)
    )
  * vm_cesIO(ttot,regi,in) / 11
*ML/RP* use "kap/11"  instead of "vm_invMacro" for the scaling to remove the "invest=0"-trap that sometimes appeared in delay scenarios; kap/11 corresponds to the global average ratio of investments to capital in 2005.
*** In some regions the ratio kap:invest is higher, in some it is lower.
;

***---------------------------------------------------------------------------
*' Initial conditions for capital:
***---------------------------------------------------------------------------
q01_kapMo0(t0(t),regi,ppfKap(in))$(pm_cesdata(t,regi,in,"quantity") gt 0)..
    vm_cesIO(t,regi,in)
  =e=
    pm_cesdata(t,regi,in,"quantity");

*' Limit the share of one ppfEn in total CES nest inputs:
q01_limitShPpfen(t,regi,out,in)$( pm_ppfen_shares(t,regi,out,in) ) ..
    vm_cesIO(t,regi,in) + pm_cesdata(t,regi,in,"offset_quantity")
  =l=
    pm_ppfen_shares(t,regi,out,in)
  * (sum(cesOut2cesIn(out,in2), vm_cesIO(t,regi,in2) + pm_cesdata(t,regi,in2,"offset_quantity")))
;

*' Limit the ratio of two ppfEn:
q01_limtRatioPpfen(t,regi,in,in2)$( p01_ppfen_ratios(t,regi,in,in2) ) ..
    vm_cesIO(t,regi,in) + pm_cesdata(t,regi,in,"offset_quantity")
  =l=
    p01_ppfen_ratios(t,regi,in,in2)
  * (vm_cesIO(t,regi,in2) + pm_cesdata(t,regi,in,"offset_quantity"))
;
*' @stop
*** EOF ./modules/01_macro/singleSectorGr/equations.gms

*** |  (C) 2006-2024 Potsdam Institute for Climate Impact Research (PIK)
*** |  authors, and contributors see CITATION.cff file. This file is part
*** |  of REMIND and licensed under AGPL-3.0-or-later. Under Section 7 of
*** |  AGPL-3.0, you are granted additional permissions described in the
*** |  REMIND License Exception, version 1.0 (see LICENSE file).
*** |  Contact: remind@pik-potsdam.de
*** SOF ./modules/01_macro/singleSectorGr/postsolve.gms
*** Consumption per capita
pm_consPC(ttot,regi)$(ttot.val gt 2005 and ttot.val le 2150 and (pm_SolNonInfes(regi) eq 1) ) =
    vm_cons.l(ttot,regi)/pm_pop(ttot,regi)
;

*** Interpolate years
loop(ttot$(ttot.val ge 2005),
	loop(tall$(pm_tall_2_ttot(tall, ttot)),
		pm_consPC(tall,regi) =
		    (1- pm_interpolWeight_ttot_tall(tall)) * pm_consPC(ttot,regi)
		    + pm_interpolWeight_ttot_tall(tall) * pm_consPC(ttot + 1,regi);
));
pm_consPC(tall,regi)$(tall.val gt 2150) = pm_consPC("2150",regi);


*** output parameter for diagnostics

*** Compute ppf prices from CES derivatives
o01_CESderivatives(ttot,regi,cesOut2cesIn(out,in))$( vm_cesIO.l(ttot,regi,in) gt 1e-6 AND
                                                     vm_cesIO.l(ttot,regi,out) gt 1e-6 )
  =
    pm_cesdata(ttot,regi,in,"xi")
  * pm_cesdata(ttot,regi,in,"eff")
  * vm_effGr.l(ttot,regi,in)

  * vm_cesIO.l(ttot,regi,out)
 ** (1 - pm_cesdata(ttot,regi,out,"rho"))

  * ( pm_cesdata(ttot,regi,in,"eff")
    * vm_effGr.l(ttot,regi,in)
    * vm_cesIO.l(ttot,regi,in)
    )
 ** (pm_cesdata(ttot,regi,out,"rho") - 1)
;

loop ((cesLevel2cesIO(counter,in),cesOut2cesIn(in,in2),cesOut2cesIn2(in2,in3)),
  o01_CESderivatives(ttot,regi,"inco",in3)
  = o01_CESderivatives(ttot,regi,"inco",in2)
  * o01_CESderivatives(ttot,regi,in2,in3);
);


*** compute marginal rate of substitution between primary production factors as
*** ratio of CES prices provides the amount of in2 needed to subsitute one unit
*** of in to generate the same economic value
loop ((ttot,regi,cesOut2cesIn(out,ppfEn(in)),cesOut2cesIn2(out,in2))$(
                                        o01_CESderivatives(ttot,regi,"inco",in2) ),
  o01_CESmrs(ttot,regi,in,in2)$(o01_CESderivatives(ttot,regi,"inco",in2) gt 0)
  = o01_CESderivatives(ttot,regi,"inco",in)
  / o01_CESderivatives(ttot,regi,"inco",in2)
  );

*** total CES efficiency as diagnostic output parameter
o01_totalCESEff(ttot,regi,in) = sum(cesOut2cesIn(out,in),
                               pm_cesdata(ttot,regi,in,"xi")
                               ** (1/pm_cesdata(ttot,regi,out,"rho"))
                               * pm_cesdata(ttot,regi,in,"eff")
                               * vm_effGr.l(ttot,regi,in));


*** EOF ./modules/01_macro/singleSectorGr/postsolve.gms

*** |  (C) 2006-2024 Potsdam Institute for Climate Impact Research (PIK)
*** |  authors, and contributors see CITATION.cff file. This file is part
*** |  of REMIND and licensed under AGPL-3.0-or-later. Under Section 7 of
*** |  AGPL-3.0, you are granted additional permissions described in the
*** |  REMIND License Exception, version 1.0 (see LICENSE file).
*** |  Contact: remind@pik-potsdam.de
*** SOF ./modules/01_macro/singleSectorGr/preloop.gms

*** Calculate cummulative depreciation factors
loop ((t,counter),
if ( pm_dt(t) eq 2 * counter.val,
p01_cumDeprecFactor_old(t,regi,in)$(ppfKap(in)) 
=   ((1 - pm_delta_kap(regi,in)) ** (pm_dt(t)/2 )
      - (1 - pm_delta_kap(regi,in)) ** (pm_dt(t) ))
     /  pm_delta_kap(regi,in)
    ;

p01_cumDeprecFactor_new(t,regi,in)$(ppfKap(in) ) 
=   ( 1 
     - (1 - pm_delta_kap(regi,in)) ** (pm_dt(t)/2)
      )
     /  pm_delta_kap(regi,in)
    ;

);
if ( pm_dt(t) eq (2 * counter.val -1),
p01_cumDeprecFactor_old(t,regi,in)$(ppfKap(in)) 
=   ((1 - pm_delta_kap(regi,in)) ** (pm_dt(t)/2 - 0.5)
      - (1 - pm_delta_kap(regi,in)) ** (pm_dt(t)))
     /  pm_delta_kap(regi,in)
    - 1/2 * (1 - pm_delta_kap(regi,in)) ** (pm_dt(t)/2 - 0.5 ) 
    ;

p01_cumDeprecFactor_new(t,regi,in)$(ppfKap(in)) 
=   ( 1 
     - (1 - pm_delta_kap(regi,in)) ** (pm_dt(t)/2 - 0.5 + 1)
      )
     /  pm_delta_kap(regi,in)
    - 1/2 * (1 - pm_delta_kap(regi,in)) ** (pm_dt(t)/2 - 0.5) 
    ;
    
);
); 
display "test Deprec", p01_cumDeprecFactor_new,p01_cumDeprecFactor_old;

*** EOF ./modules/01_macro/singleSectorGr/preloop.gms

*** |  (C) 2006-2024 Potsdam Institute for Climate Impact Research (PIK)
*** |  authors, and contributors see CITATION.cff file. This file is part
*** |  of REMIND and licensed under AGPL-3.0-or-later. Under Section 7 of
*** |  AGPL-3.0, you are granted additional permissions described in the
*** |  REMIND License Exception, version 1.0 (see LICENSE file).
*** |  Contact: remind@pik-potsdam.de
*** SOF ./modules/01_macro/singleSectorGr/realization.gms

*' @description The singleSectorGr realization corresponds to a neo-classical, single 
*' sector growth model.

*####################### R SECTION START (PHASES) ##############################
$Ifi "%phase%" == "sets" $include "./modules/01_macro/singleSectorGr/sets.gms"
$Ifi "%phase%" == "declarations" $include "./modules/01_macro/singleSectorGr/declarations.gms"
$Ifi "%phase%" == "datainput" $include "./modules/01_macro/singleSectorGr/datainput.gms"
$Ifi "%phase%" == "equations" $include "./modules/01_macro/singleSectorGr/equations.gms"
$Ifi "%phase%" == "preloop" $include "./modules/01_macro/singleSectorGr/preloop.gms"
$Ifi "%phase%" == "bounds" $include "./modules/01_macro/singleSectorGr/bounds.gms"
$Ifi "%phase%" == "postsolve" $include "./modules/01_macro/singleSectorGr/postsolve.gms"
*######################## R SECTION END (PHASES) ###############################
*** EOF ./modules/01_macro/singleSectorGr/realization.gms

*** |  (C) 2006-2024 Potsdam Institute for Climate Impact Research (PIK)
*** |  authors, and contributors see CITATION.cff file. This file is part
*** |  of REMIND and licensed under AGPL-3.0-or-later. Under Section 7 of
*** |  AGPL-3.0, you are granted additional permissions described in the
*** |  REMIND License Exception, version 1.0 (see LICENSE file).
*** |  Contact: remind@pik-potsdam.de
*** SOF ./modules/01_macro/singleSectorGr/sets.gms

Sets

cesOut2cesIn(all_in,all_in)           "CES tree structure"
/
  inco  . (lab, kap, en)
/

cesLevel2cesIO(counter,all_in)        "CES tree structure by level"
cesRev2cesIO(counter,all_in)          "CES tree structure by level - descending order"
cesOut2cesIn_below(all_in,all_in)     "All elements of the CES below located below the first item given"


in(all_in)                            "All inputs and outputs of the CES function"
/
  inco                                "Macroeconomic output"
  lab                                 "Labour input"
  kap                                 "Capital input"
  en                                  "Energy input"
/
ppf(all_in)                           "All primary production factors"
ipf(all_in)                           "All intermediate production factors"
ppfKap(all_in)                        "Primary production factors capital"   / kap /
ppfEn(all_in)                         "Primary production factors energy"

in_enerSerAdj(all_in)                 "Energy services factors which should be constrained by adjustment costs" //
;

alias(cesOut2cesIn,cesOut2cesIn2,cesOut2cesIn3);
alias(in,out);
alias(in,in2,in3);
alias(ipf,ipf2);
*** EOF ./modules/01_macro/singleSectorGr/sets.gms
